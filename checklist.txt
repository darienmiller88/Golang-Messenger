Front end todo list!

[x] add messages through message bar, append them to chat
[x] have the chat scroll to the bottom every time a message is appended
[x] most recent message appears for the chat div that is clicked
[x] add functionality to "create new group" and "message user" through modals
[x] append new div to chat list after adding new group or user 
[x] add "three dots vertical" to messages, allowing you to remove the message, satisfying the DELETE CRUD functionality

back end todo list!

[x] Try to get either postgres or mysql running LMAO
[x] validate user login/sign in using sessions cookies, allow log out
[x] get public chat to send messages to all clients in public chat
[x] save messages sent into message history
[] deploy to heroku
[] create and save new group chats to group chat table
[] receive messages from particular group chats and send to front end














func fileServer(router *chi.Mux, root string) {
	fs := http.FileServer(http.Dir(root))

	router.Get("/*", func(w http.ResponseWriter, r *http.Request) {
		if _, err := os.Stat(root + r.RequestURI); os.IsNotExist(err) {
			http.StripPrefix(r.RequestURI, fs).ServeHTTP(w, r)
		} else {
			fs.ServeHTTP(w, r)
		}
	})
}

func renderTemplate(response http.ResponseWriter, fileName string, data interface{}){
	myTemplate := template.Must(template.ParseFiles(fileName))
	if err := myTemplate.Execute(response, data); err != nil {
		http.Error(response, err.Error(), http.StatusInternalServerError)
	}
}